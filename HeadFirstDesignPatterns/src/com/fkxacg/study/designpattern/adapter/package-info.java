/**
 * 适配器模式。
 * 包装某些对象让它们看起来不像自己而像别的东西。
 * 将一个类的接口，转换为期望的另一个接口
 * 
 * 要想将一个接口下的类能够通过里一个接口调用。
 * 创建一个新的适配器类继承于想要转换的接口，在属性中包含一个被转换接口的具体类对象，实现的函数根据情况去操作被转换的对象。
 * 此模式不需要改动其他类，只需要添加一个转换器类就行，只是在转换器类的函数实现中会比较复杂，有些函数甚至无法实现。
 * 
 * 这里要将野火鸡（火鸡接口）当作一个鸭子来使用。
 * 火鸡和鸭子都有叫和飞的方法，但叫法不一样并且火鸡飞的很近，在适配器中叫可以直接调用，飞的话多调用几次火鸡，就做成了一个很像鸭子的火鸡。
 * 
 * 适配器模式有对象和类两种适配器，但类适配器需要多重继承实现，java无法做到
 * 对象适配的意思是适配器中包含一个具体的对象，而类适配是在类的层面做好全部的适配工作。
 */
/**
 * @author fkxacg
 *
 */
package com.fkxacg.study.designpattern.adapter;