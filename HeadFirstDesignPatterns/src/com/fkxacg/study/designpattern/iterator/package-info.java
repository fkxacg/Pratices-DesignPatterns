/**
 * 迭代器模式。
 * 提供一种方法顺序访问一个聚合对象中的各个元素，而又不暴露其内部的表示。
 * 
 * 此处为外部迭代器，客户通过next()取得下一个元素，而内部迭代器由迭代器自行处理元素，客户传入操作。
 * 迭代器只是取出所有元素，并不表示取出的先后就代表元素的次序，对于散列表这样的集合也应可以取出。
 * 
 * 此处实现一个场景：
 * 有两个餐馆PancakeHouse和Diner分别制作早餐和午餐。
 * 每个餐厅都有个菜单（聚合类），内部以不同方法保存数个菜单项（此处两个餐厅的菜单项是相同的，便于客户端简单处理，实际应用中可以使用不同类）
 * 招待类需要从两个菜单中按顺序获得菜单项，但不必自己处理不同的聚合形式，交由第三方迭代器处理。
 * 每个菜单都有一个对应的迭代器帮助处理内部的数据集。
 * 招待对象只需从具体菜单处获得一个具体迭代器，用迭代器接口引用，并按顺序获得对象。
 * 
 * java库中有一个Iterator接口，平常使用此类，这里的Iterator接口用于理解此模式。（java库的接口多一个删除方法）
 * 
 */
/**
 * @author fkxacg
 *
 */
package com.fkxacg.study.designpattern.iterator;